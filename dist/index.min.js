"use strict";function __rest(e,t){var a={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(a[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(r=Object.getOwnPropertySymbols(e);n<r.length;n++)t.indexOf(r[n])<0&&(a[r[n]]=e[r[n]])}return a}function getModuleKeys(e){return[...Object.keys(e),...Object.getOwnPropertyNames(Object.getPrototypeOf(e))]}function getCallbackName({moduleName:e,funcName:t,requestID:a}){return`${e}_${t}Callback${null!==a?`_${a}`:""}`}function promisifyCallback(e,t){var{funcToWrap:a}=t;const r=getCallbackName(__rest(t,["funcToWrap"]));return new Promise(t=>{e[r]=(e=>t(e)),a()})}function setUpGlobalCallback(e,t){var a=__rest(t,["currentRequestIDFunc"]);const r=getCallbackName(Object.assign({},a,{requestID:null}));e[r]||(e[r]=(t=>{var{requestID:r}=t,n=__rest(t,["requestID"]);const o=getCallbackName(Object.assign({},a,{requestID:r}));e[o]&&e[o](n),delete e[o]}))}function wrapAndroidModule(e,t,a){const r=getModuleKeys(a).filter(e=>"function"==typeof a[e]).map(r=>{let n=0;return setUpGlobalCallback(e,{moduleName:t,currentRequestIDFunc:()=>n,funcName:r}),{[r]:(...o)=>{const u=`${n}`;return n+=1,promisifyCallback(e,{moduleName:t,requestID:u,funcName:r,funcToWrap:a[r].bind(a,u,...o)})}}}).reduce((e,t)=>Object.assign({},e,t),{});return{invoke:(e,...t)=>r[e](...t.map(({paramValue:e})=>e))}}function wrapIOSModule(e,t,a){const r={};return{invoke:(n,...o)=>{const u=(r[n]||-1)+1;r[n]=u,setUpGlobalCallback(e,{moduleName:t,currentRequestIDFunc:()=>r[n],funcName:n});const l={method:n,parameters:Object.assign({},o.map(({paramName:e,paramValue:t})=>({[e]:t})).reduce((e,t)=>Object.assign({},e,t),{}),{requestID:u}),callbackName:getCallbackName({moduleName:t,funcName:n,requestID:null})};return promisifyCallback(e,{moduleName:t,funcName:n,funcToWrap:a.postMessage.bind(a,l),requestID:`${u}`})}}}function createMethodParameter(e,t){return{paramName:e,paramValue:t}}function wrapModule(e,t){if(e[t]){const a=e[t],r=wrapAndroidModule(window,t,a);e[t]=r}else if(e.webkit&&e.webkit.messageHandlers&&e.webkit.messageHandlers[t]){const a=wrapIOSModule(e,t,e.webkit.messageHandlers[t]);e[t]=a}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.createMethodParameter=createMethodParameter,exports.wrapAndroidModule=wrapAndroidModule,exports.wrapIOSModule=wrapIOSModule,exports.wrapModule=wrapModule;