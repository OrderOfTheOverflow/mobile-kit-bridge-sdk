"use strict";function __rest(e,t){var r={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&t.indexOf(a)<0&&(r[a]=e[a]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var n=0;for(a=Object.getOwnPropertySymbols(e);n<a.length;n++)t.indexOf(a[n])<0&&(r[a[n]]=e[a[n]])}return r}function createSubscription(e){let t=!1;return{isUnsubscribed:()=>t,unsubscribe:()=>{t||(e(),t=!0)}}}function getObjectKeys(e){return[...Object.keys(e),...Object.getOwnPropertyNames(Object.getPrototypeOf(e))]}function isStreamFunction(e){return e.toLowerCase().startsWith("stream_")}function getCallbackName({moduleName:e,funcName:t,requestID:r}){return`${e}_${t}Callback${null!==r?`_${r}`:""}`}function isType(e,...t){const r=getObjectKeys(e);return t.every(e=>r.indexOf(e)>=0)}function promisifyCallback(e,{callbackNameFunc:t,funcToWrap:r}){const a=t();return new Promise(t=>{e[a]=(r=>{t(r),delete e[a]}),r(a)()})}function streamCallback(e,{callbackNameFunc:t,funcToWrap:r}){return{subscribe:({onValue:a,onComplete:n})=>{const o=t();let c;return e[o]=(e=>{if(isType(e,"result","error","status_code"))a(e);else switch(e.event){case exports.StreamEvents.STREAM_TERMINATED:c.unsubscribe()}}),r(o)(),c=createSubscription(()=>{delete e[o],n&&n()})}}}function simplifyCallback(e,t){var{funcNameToWrap:r}=t,a=__rest(t,["funcNameToWrap"]);return isStreamFunction(r)?streamCallback(e,a):promisifyCallback(e,a)}function wrapAndroidModule(e,t,r){const a=getObjectKeys(r).filter(e=>"function"==typeof r[e]).map(a=>{let n=0;const o=()=>{const e=`${n}`;return n+=1,getCallbackName({moduleName:t,requestID:e,funcName:a})};return{[a]:(...t)=>simplifyCallback(e,{callbackNameFunc:o,funcNameToWrap:a,funcToWrap:e=>r[a].bind(r,...t,e)})}}).reduce((e,t)=>Object.assign({},e,t),{});return{invoke:(e,...t)=>a[e](...t.map(({paramValue:e})=>e))}}function wrapIOSModule(e,t,r){const a={};return{invoke:(n,...o)=>{const c={method:n,parameters:Object.assign({},o.map(({paramName:e,paramValue:t})=>({[e]:t})).reduce((e,t)=>Object.assign({},e,t),{}))};return simplifyCallback(e,{callbackNameFunc:()=>{const e=a[n]||0;return a[n]=e+1,getCallbackName({moduleName:t,requestID:e,funcName:n})},funcNameToWrap:n,funcToWrap:e=>r.postMessage.bind(r,Object.assign({},c,{callbackName:e}))})}}}function wrapModule(e,t){if(e[t]){const r=e[t],a=wrapAndroidModule(window,t,r);e[t]=a}else if(e.webkit&&e.webkit.messageHandlers&&e.webkit.messageHandlers[t]){const r=wrapIOSModule(e,t,e.webkit.messageHandlers[t]);e[t]=r}}Object.defineProperty(exports,"__esModule",{value:!0}),(exports.StreamEvents||(exports.StreamEvents={})).STREAM_TERMINATED="STREAM_TERMINATED",exports.wrapAndroidModule=wrapAndroidModule,exports.wrapIOSModule=wrapIOSModule,exports.wrapModule=wrapModule;