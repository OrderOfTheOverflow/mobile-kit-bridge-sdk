"use strict";function __rest(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&(n[r[a]]=e[r[a]])}return n}function createSubscription(e){let t=!1;return{isUnsubscribed:()=>t,unsubscribe:()=>{t||(e(),t=!0)}}}function getObjectKeys(e){return[...Object.keys(e),...Object.getOwnPropertyNames(Object.getPrototypeOf(e))]}function isStreamFunction(e){return e.toLowerCase().startsWith("observe")}function getCallbackName({moduleName:e,funcName:t,requestID:n}){return`${e}_${t}Callback${null!==n?`_${n}`:""}`}function isType(e,...t){const n=getObjectKeys(e);return t.every(e=>n.indexOf(e)>=0)}function promisifyCallback(e,{callbackNameFunc:t,funcToWrap:n}){const r=t();return new Promise(t=>{e[r]=(n=>{t(n),delete e[r]}),n(r)()})}function streamCallback(e,{callbackNameFunc:t,funcToWrap:n}){return{subscribe:r=>{const a=t();let c;return e[a]=(e=>{if(isType(e,"status_code"))r&&r.next&&r.next(e);else switch(e.event){case exports.StreamEvent.STREAM_TERMINATED:c.unsubscribe()}}),n(a)(),c=createSubscription(()=>{delete e[a],r&&r.complete&&r.complete()})}}}function simplifyCallback(e,t){var{funcNameToWrap:n}=t,r=__rest(t,["funcNameToWrap"]);return isStreamFunction(n)?streamCallback(e,r):promisifyCallback(e,r)}function wrapAndroidModule(e,t,n){const r=getObjectKeys(n).filter(e=>"function"==typeof n[e]).map(r=>{let a=0;const c=()=>{const e=`${a}`;return a+=1,getCallbackName({moduleName:t,requestID:e,funcName:r})};return{[r]:t=>simplifyCallback(e,{callbackNameFunc:c,funcNameToWrap:r,funcToWrap:e=>n[r].bind(n,JSON.stringify({callback:e,method:r,parameters:t}))})}}).reduce((e,t)=>Object.assign({},e,t),{});return{invoke:(e,t)=>r[e](t)}}function wrapIOSModule(e,t,n){const r={};return{invoke:(a,c)=>simplifyCallback(e,{funcNameToWrap:a,callbackNameFunc:()=>{const e=r[a]||0;return r[a]=e+1,getCallbackName({moduleName:t,requestID:e,funcName:a})},funcToWrap:e=>n.postMessage.bind(n,{callback:e,method:a,parameters:c})})}}function wrapModule(e,t){if(e[t]){const n=e[t],r=wrapAndroidModule(window,t,n);e[t]=r}else if(e.webkit&&e.webkit.messageHandlers&&e.webkit.messageHandlers[t]){const n=wrapIOSModule(e,t,e.webkit.messageHandlers[t]);e[t]=n}}Object.defineProperty(exports,"__esModule",{value:!0}),(exports.StreamEvent||(exports.StreamEvent={})).STREAM_TERMINATED="STREAM_TERMINATED",exports.wrapModule=wrapModule;